<?xml version="1.0"?>
<mate:EventMap  		   
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/halo"
        xmlns:mate="http://mate.asfusion.com/"
        xmlns:rtmp="com.flashdevs.mateExt.rtmpService.mate.*">

    <fx:Script><![CDATA[
		import business.MainManager;
		
		import com.asfusion.mate.utils.debug.Debugger;
		import com.flashdevs.mateExt.rtmpService.RtmpService;
		import com.flashdevs.mateExt.rtmpService.events.RtmpDataEvent;
        
        import com.flashdevs.mateExt.rtmpService.events.RtmpStatusEvent;
        
        import com.event.AuthenticationEvent;
        import com.event.MainManagerEvent;
		
		import mx.events.FlexEvent;

        ]]></fx:Script>

    <fx:Declarations>
		<mate:Injectors target="{MainManager}" debug="true">
			<mate:PropertyInjector source="{RtmpService}"
								   targetKey="netConnection" sourceKey="netConnection"/>
		</mate:Injectors>
		
        <mate:Debugger level="{Debugger.ALL}"/>
		<!-- FlexEvent.CREATION_COMPLETE __________________________________________________________________ -->		
		<mate:EventHandlers type="{FlexEvent.CREATION_COMPLETE}" debug="true">
			<mate:ObjectBuilder generator="{RtmpService}" constructorArguments="{scope.dispatcher}"/>
			<mate:ObjectBuilder generator="{MainManager}" constructorArguments="{scope.dispatcher}"/>
		</mate:EventHandlers>
      
        <mate:EventHandlers type="{RtmpStatusEvent.SUCCESS}" debug="true">
            <mate:MethodInvoker generator="{MainManager}"
                method="netConnectionSuccess" arguments="{[currentEvent]}"/>
        </mate:EventHandlers>
        
        
        <mate:EventHandlers type="{AuthenticationEvent.CONNECT}" debug="true">
			<mate:MethodInvoker generator="{RtmpService}"   
								method="connect"  arguments="{[event.rtmpSever,event.params]}"/>
            <rtmp:CallbackRegistrator action="loggedUserJoinDeck" target="{MainManager}" method="onLoggedUserJoinDeck"/>
            <rtmp:CallbackRegistrator action="joinUser" target="{MainManager}" method="onJoinUser"/>
            <rtmp:CallbackRegistrator action="leaveUser" target="{MainManager}" method="onLeaveUser"/>
	        <rtmp:CallbackRegistrator action="checkConnectedClients" target="{MainManager}" method="onCheckConnectedClients"/>
	        <rtmp:CallbackRegistrator action="changeStatusUser" target="{MainManager}" method="onChangeStatusUser"/>
	        <rtmp:CallbackRegistrator action="checkChatMessageUser" target="{MainManager}" method="onCheckChatMessageUser"/>
           <!-- <rtmp:CallbackRegistrator action="checkIdClientTuteur" target="{MainManager}" method="onCheckIdClientTuteur"/>-->
            
        </mate:EventHandlers>
        
        <mate:EventHandlers type="{MainManagerEvent.SEND_NOTIFICATON_JOIN_USER}" debug="true">
            <rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
                <mate:Request action="notificationJoinUser"   arguments="{[]}" />	
            </rtmp:RtmpServiceInvoker>	
        </mate:EventHandlers>
        <mate:EventHandlers type="{MainManagerEvent.SEND_NOTOFICATION_CHANGE_STATUS_USER}" debug="true">
            <rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
                <mate:Request action="notificationChangeStatusUser"   arguments="{[event.idClient, event.statusUser]}" />	
            </rtmp:RtmpServiceInvoker>	
        </mate:EventHandlers>
        <mate:EventHandlers type="{MainManagerEvent.SEND_CHAT_MESSAGE_USER}" debug="true">
            <rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
                <mate:Request action="sendChatMessageUser"   arguments="{[event.message]}" />	
            </rtmp:RtmpServiceInvoker>	
        </mate:EventHandlers>
		
       <!-- <mate:EventHandlers type="{AuthenticationEvent.GET_ID_TUTER}" debug="true">
            <rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
                <mate:Request action="getIdTuteur"   arguments="{[event.nameTuteur]}" />	
            </rtmp:RtmpServiceInvoker>	
        </mate:EventHandlers>
        
        <mate:EventHandlers type="{AuthenticationEvent.SET_ID_TUTER}" debug="true">
            <rtmp:RtmpServiceInvoker service="{RtmpService}" cache="global">
                <mate:Request action="setIdTuteur"   arguments="{[event.idClientTuteur]}" />	
            </rtmp:RtmpServiceInvoker>	
        </mate:EventHandlers>-->
		
        <mate:EventHandlers type="{RtmpDataEvent.DATA}" debug="true"/>
		

    </fx:Declarations>

</mate:EventMap>
